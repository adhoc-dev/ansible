---
# Instalar github cli
- name: Agregar la key de github cli
  become: true
  apt_key:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    state: present

- name: Agregar repositorio de github cli
  become: true
  apt_repository:
    repo: deb  https://cli.github.com/packages stable main
    filename: gh

- name: Instalar github cli
  become: true
  apt:
    name: gh
  changed_when: false

## Crear keys y configurar ssh
- name: Crear carpeta para ssh key
  file:
    path: "/home/{{ remote_regular_user }}/.ssh"
    state: directory
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user }}"
    mode: "744"

- name: Generar SSH key "{{ remote_regular_user }}"
  become: true
  become_user: "{{ remote_regular_user }}"
  openssh_keypair:
    path: "/home/{{ remote_regular_user }}/.ssh/id_rsa"
    type: rsa
    size: 4096
    state: present
    force: true
    owner: "{{ remote_regular_user }}"

- name: Copiar configuraciones de sshconfig
  copy: src=./files/sshconfig dest=/home/{{ remote_regular_user }}/.ssh/config owner={{ remote_regular_user }} group={{ remote_regular_user }} mode=744

# Configurando git
- name: Definiendo editor por defecto
  git_config:
    name: core.editor
    value: code --wait
    scope: global

- name: Configuraciones globales para git 01
  git_config:
    name: diff.tool
    value: default-difftool
    scope: global

- name: Configuraciones globales para git 02
  git_config:
    name: difftool.default-difftool.cmd
    value: code --wait --diff \$LOCAL \$REMOTE
    scope: global

- name: Configuraciones globales para git 03
  git_config:
    name: push.default
    value: nothing
    scope: global

- name: Configuraciones globales para git 04
  git_config:
    name: pull.default
    value: nothing
    scope: global

- name: Configuraciones globales para git 05
  git_config:
    name: pull.ff
    value: only
    scope: global

# Global Hooks to prevent push to master
- name: Crear carpeta para hooks
  file:
    path: "/etc/git/hooks"
    state: directory
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user }}"
    mode: "744"
    # sudo chmod +x /etc/git/hooks/*

- name: Comando mÃ¡gico para hooks
  become: true
  become_user: "{{ remote_regular_user }}"
  command: "echo -e '#!/bin/sh\n\nif [ -x `pwd`/.git/hooks/$(basename $0) ];\nthen\n\texec `pwd`/.git/hooks/$(basename $0)\nfi' | sudo tee /etc/git/hooks/{applypatch-msg,commit-msg,fsmonitor-watchman,post-update,pre-applypatch,pre-commit,pre-rebase,pre-receive,prepare-commit-msg,update} > /dev/null"
  changed_when: false

- name: Copiar archivo pre-push
  copy: src=./files/pre-push dest=/etc/git/hooks/pre-push owner={{ remote_regular_user }} group={{ remote_regular_user }} mode=744

- name: Configurar path para hooks
  git_config:
    name: core.hooksPath
    value: /etc/git/hooks/
    scope: global

# Git-AdHoc Prompt
- name: Copiar archivo .prompt
  copy: src=./files/.prompt_git dest=/home/{{ remote_regular_user }}/.prompt_git owner={{ remote_regular_user }} group={{ remote_regular_user }} mode=744
  changed_when: false
