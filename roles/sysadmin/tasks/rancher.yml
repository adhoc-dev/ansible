---


- name: Instalar Rancher1




- name: Instalar Rancher Kubernetes Engine Manager (RKE)
$ wget https://github.com/rancher/rke/releases/download/latest/rke_linux-amd64
$ sudo mv rke_linux-amd64 /usr/local/bin/rke
$ chmod +x /usr/local/bin/rke





# Rancher2 + Script r2
- name: Buscar versiones de Rancher2
  uri:
    url: https://releases.rancher.com/rancher/index.json
    return_content: yes
  register: terraform_index
  when: terraform_version == "latest"
  check_mode: no

- name: Buscar latest cuando la variable está definida
  set_fact:
    terraform_version_to_install: "{{ (terraform_index.content | from_json).versions | reject('search','-') | list | sort_versions | last }}"
  when: terraform_version == 'latest'

- name: Instalar una versiópn específica si no está definida latest
  set_fact:
    terraform_version_to_install: "{{ terraform_version }}"
  when: terraform_version != 'latest'

# This task avoids downloading Terraform every time
- name: Verificar si ya está instalada la versión definida
  command: "{{ terraform_path }}/terraform -version"
  register: terraform_installed_version
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: Instalar Terraform
  unarchive:
    src: "{{ terraform_pkg_url }}"
    dest: "{{ terraform_path }}"
    remote_src: yes
  when: terraform_version_to_install not in ( terraform_installed_version.stdout_lines | default(['empty'], true) | first )

rancher2-cli + kubectl (opcionales)
# Instalar Rancher Kubernetes Engine Manager RKE
$ wget https://github.com/rancher/rke/releases/download/latest/rke_linux-amd64
$ sudo mv rke_linux-amd64 /usr/local/bin/rke
$ chmod +x /usr/local/bin/rke

# Instalar Rancher 2
# Verificar latest: https://github.com/rancher/cli/releases/tag/v2.4.13
$ wget https://github.com/rancher/cli/releases/latest
$ tar xf rancher-linux-amd64-v2.4.13.tar.gz
$ rm rancher-linux-amd64-v2.4.13.tar.gz
$ sudo mv rancher-v2.4.13/rancher /usr/bin/rancher2
$ rm -d rancher-v2.4.13/



Extraer archivo y mover al path (usamos rancher2 para poder seguir trabajando en simultáneo con rancher1 {ra.adhoc.com.ar})
$ tar xzvf rancher-linux-amd64-v{version}.tar.gz
$ cd rancher-linux-amd64-v{version}
$ sudo mv rancher /usr/bin/rancher2
Login al nuevo ambiente





Requerimiento: contar con cuenta en el nuevo rancher (login con github) y generar token en https://ra.adhoc.ar/apikeys
$ rancher2 login https://ra.adhoc.ar/v3 --token {bearer-token}
Para agilizar la conexión y ejecución de comandos puede utilizarse el script rke_byadhoc.sh
Copiar script $ code /home/$USER .rke_byadhoc.sh
Cambiar permisos de dicho archivo para que sea ejecutable “$ chmod +x /home/$USER .rke_byadhoc.sh”
Crear alias $ echo "alias r2='/home/$USER/.rke_byadhoc.sh'" >> ~/.bashrc
Algunos comandos:
$ r2 connect test-adhoc-31-12-1
$ r2 logs test-adhoc-31-12-1
